name: Create release

on:
  workflow_dispatch:  # Allows manual triggering

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        
      - name: Check release config
        id: check-config
        run: |
          if [ ! -f "release_config.json" ]; then
            echo "Error: release_config.json not found"
            exit 1
          fi
          echo "release_config.json found"
          
      - name: Read release config
        id: read-config
        run: |
          # Read JSON and extract bump values
          PLATFORM_BUMP=$(jq -r '.platform // empty' release_config.json)
          BACKEND_BUMP=$(jq -r '.backend // empty' release_config.json)
          FRONTEND_BUMP=$(jq -r '.frontend // empty' release_config.json)
          
          # Set as environment variables for this step and subsequent steps
          echo "PLATFORM_BUMP=$PLATFORM_BUMP" >> $GITHUB_ENV
          echo "BACKEND_BUMP=$BACKEND_BUMP" >> $GITHUB_ENV
          echo "FRONTEND_BUMP=$FRONTEND_BUMP" >> $GITHUB_ENV
          
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install uv for SDK
        if: github.event_name == 'workflow_dispatch'
        uses: astral-sh/setup-uv@v6
        with:
            version: latest
      - name: Set up Git
        run: |
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
          
      - name: Run release script
        run: |
          python3 .github/release platform --$PLATFORM_BUMP backend --$BACKEND_BUMP frontend --$FRONTEND_BUMP
          
      - name: Commit changes
        run: |
          git add .
          git commit -m "Prepare release: platform $PLATFORM_BUMP, backend $BACKEND_BUMP, frontend $FRONTEND_BUMP"
          
      - name: Push release branch
        run: |
          git push origin $(git branch --show-current)
          
      - name: Create Pull Request
        run: |
          BRANCH_NAME=$(git branch --show-current)
          gh pr create --title "Release: platform $PLATFORM_BUMP, backend $BACKEND_BUMP, frontend $FRONTEND_BUMP" \
            --body "This PR contains the automated release changes for:
          - Platform: $PLATFORM_BUMP
          - Backend: $BACKEND_BUMP  
          - Frontend: $FRONTEND_BUMP
          
          ## Changes
          - Version files updated
          - Changelog updated
          - Release branch created
          
          Please review the changes before merging." \
            --base main \
            --head $BRANCH_NAME
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          