from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

import rhesis
from rhesis.backend.alembic.utils.template_loader import (
    load_cleanup_status_template,
    load_status_template,
)

# revision identifiers, used by Alembic.
revision: str = "fe5d9ca98fca"
down_revision: Union[str, None] = "5ac5d119bda1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Step 1: Add source-specific statuses
    source_status_values = """
        ('Active', 'Source is active and usable'),
        ('Processing', 'Source ingestion or transformation is in progress'),
        ('Error', 'Last ingestion or transformation failed')
    """.strip()

    op.execute(load_status_template("EntityType", "Source", source_status_values))

    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "source", sa.Column("status_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "source", "status", ["status_id"], ["id"])
    op.add_column(
        "test", sa.Column("source_id", rhesis.backend.app.models.guid.GUID(), nullable=True)
    )
    op.create_foreign_key(None, "test", "source", ["source_id"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "test", type_="foreignkey")
    op.drop_column("test", "source_id")
    op.drop_constraint(None, "source", type_="foreignkey")
    op.drop_column("source", "status_id")
    # ### end Alembic commands ###

    # Step 1: Remove source-specific statuses
    status_names_clause = "'Active', 'Processing', 'Error'"
    op.execute(load_cleanup_status_template("EntityType", "Source", status_names_clause))
