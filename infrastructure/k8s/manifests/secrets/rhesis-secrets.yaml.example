apiVersion: v1
kind: Secret
metadata:
  name: rhesis-secrets
  namespace: rhesis
type: Opaque
data:
  #####################################################################################
  # üîê RHESIS KUBERNETES SECRETS CONFIGURATION
  #####################################################################################
  # This file contains all sensitive environment variables for the Rhesis application.
  # Copy this file to rhesis-secrets.yaml and fill in your actual values.
  #
  # üìã CONFIGURATION CATEGORIES:
  # 1. üîß USER-DEFINED (Required) - You MUST set these values
  # 2. ‚öôÔ∏è  OPTIONAL (Recommended) - Set these for enhanced functionality
  # 3. üèóÔ∏è  RHESIS-DEFINED (Don't change) - Internal configuration
  #
  # üí° TIP: Start with USER-DEFINED variables, then add OPTIONAL ones as needed.
  # üîí SECURITY: All values must be base64 encoded before use!
  #####################################################################################

  #####################################################################################
  # üîß USER-DEFINED CONFIGURATION (REQUIRED)
  # These variables MUST be set for the application to run properly
  #####################################################################################

  # =============================================================================
  # üîê AUTHENTICATION & AUTHORIZATION
  # =============================================================================
  # Auth0 Configuration - Get these from https://manage.auth0.com/
  # Create an Auth0 application and API to get these values
  AUTH0_DOMAIN: <BASE64_ENCODED_AUTH0_DOMAIN>
  AUTH0_AUDIENCE: <BASE64_ENCODED_AUTH0_AUDIENCE>
  AUTH0_CLIENT_ID: <BASE64_ENCODED_AUTH0_CLIENT_ID>
  AUTH0_CLIENT_SECRET: <BASE64_ENCODED_AUTH0_CLIENT_SECRET>
  AUTH0_SECRET_KEY: <BASE64_ENCODED_AUTH0_SECRET_KEY>

  # JWT Configuration
  JWT_SECRET_KEY: <BASE64_ENCODED_JWT_SECRET_KEY>

  # NextAuth Configuration
  NEXTAUTH_SECRET: <BASE64_ENCODED_NEXTAUTH_SECRET>

  # =============================================================================
  # üóÑÔ∏è DATABASE CONFIGURATION
  # =============================================================================
  # Database Encryption Key (REQUIRED for database field encryption)
  # Generate a new key using: python -c "from cryptography.fernet import Fernet; print(Fernet.generate_key().decode())"
  DB_ENCRYPTION_KEY: <BASE64_ENCODED_DB_ENCRYPTION_KEY>

  # =============================================================================
  # üåê GOOGLE AUTHENTICATION
  # =============================================================================
  # Google OAuth (for Google sign-in)
  GOOGLE_CLIENT_ID: <BASE64_ENCODED_GOOGLE_CLIENT_ID>
  GOOGLE_CLIENT_SECRET: <BASE64_ENCODED_GOOGLE_CLIENT_SECRET>

  #####################################################################################
  # ‚öôÔ∏è OPTIONAL CONFIGURATION (RECOMMENDED)
  # These variables enhance functionality but are not required for basic operation
  #####################################################################################

  # =============================================================================
  # ü§ñ AI MODEL CONFIGURATION
  # =============================================================================
  # Choose one or more AI providers based on your needs

  # Azure OpenAI (if using Azure)
  AZURE_OPENAI_API_KEY: <BASE64_ENCODED_AZURE_OPENAI_API_KEY>

  # OpenAI (if using OpenAI directly)
  OPENAI_API_KEY: <BASE64_ENCODED_OPENAI_API_KEY>

  # Google Gemini (if using Google AI)
  GEMINI_API_KEY: <BASE64_ENCODED_GEMINI_API_KEY>
  GOOGLE_API_KEY: <BASE64_ENCODED_GOOGLE_API_KEY>

  # =============================================================================
  # üìß EMAIL CONFIGURATION
  # =============================================================================
  # SMTP settings for email notifications (optional)
  SMTP_HOST: <BASE64_ENCODED_SMTP_HOST>
  SMTP_USER: <BASE64_ENCODED_SMTP_USER>
  SMTP_PASSWORD: <BASE64_ENCODED_SMTP_PASSWORD>
  FROM_EMAIL: <BASE64_ENCODED_FROM_EMAIL>

  # =============================================================================
  # üîó EXTERNAL SERVICES
  # =============================================================================
  # Worker API URL (if using external worker service)
  WORKER_API_URL: <BASE64_ENCODED_WORKER_API_URL>

  # Rhesis API Key (if using external Rhesis services)
  RHESIS_API_KEY: <BASE64_ENCODED_RHESIS_API_KEY>

  #####################################################################################
  # üèóÔ∏è RHESIS-DEFINED CONFIGURATION (DON'T CHANGE)
  # These are internal application settings - modify only if you know what you're doing
  # Only change the "your-secured-password" with strong passwords for Database and Redis
  # Must change the Database and Redis Configuration for the Production deployment
  #####################################################################################

  # =============================================================================
  # üóÑÔ∏è DATABASE INTERNAL CONFIGURATION
  # =============================================================================
  # Database Password (MUST be changed for production)
  SQLALCHEMY_DB_PASS: <BASE64_ENCODED_DATABASE_PASSWORD>

  # =============================================================================
  # üî¥ REDIS INTERNAL CONFIGURATION
  # =============================================================================
  # Redis Password (MUST be changed for production)
  REDIS_PASSWORD: <BASE64_ENCODED_REDIS_PASSWORD>

  #####################################################################################
  # üìö QUICK START GUIDE
  #####################################################################################
  # 1. Copy this file: cp rhesis-secrets.yaml.example rhesis-secrets.yaml
  # 2. Set required USER-DEFINED variables (minimum for basic operation):
  #    - AUTH0_DOMAIN, AUTH0_AUDIENCE, AUTH0_CLIENT_ID, AUTH0_CLIENT_SECRET
  #    - JWT_SECRET_KEY, NEXTAUTH_SECRET
  # 3. Optionally set OPTIONAL variables for enhanced functionality
  # 4. Change the database and Redis passwords for production
  # 5. Encode all values using base64:
  #    echo -n "your-actual-value" | base64
  # 6. Apply the secret: kubectl apply -f rhesis-secrets.yaml
  #
  # üîí SECURITY NOTES:
  # - Never commit the actual rhesis-secrets.yaml file to version control!
  # - Add rhesis-secrets.yaml to your .gitignore file
  # - Use strong, unique passwords for production
  # - Rotate secrets regularly
  #####################################################################################
