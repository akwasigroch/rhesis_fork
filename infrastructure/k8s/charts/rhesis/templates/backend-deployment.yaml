{{- if .Values.backend.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: {{ .Release.Namespace }}
  labels:
    app: backend
    tier: backend
    {{- include "rhesis.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicas }}
  selector:
    matchLabels:
      app: backend
      tier: backend
  template:
    metadata:
      labels:
        app: backend
        tier: backend
    spec:
      containers:
        - name: backend
          image: "{{ .Values.images.backend.repository }}:{{ .Values.images.backend.tag }}"
          imagePullPolicy: {{ .Values.images.backend.pullPolicy | default .Values.global.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.backend.service.targetPort }}
              name: http
          envFrom:
            - configMapRef:
                name: {{ .Values.secrets.configMaps.existingConfigMap }}
            - secretRef:
                name: {{ .Values.secrets.existingSecret }}
          {{- if .Values.backend.env }}
          env:
            {{- range .Values.backend.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.backend.service.targetPort }}
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.backend.service.targetPort }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 3
{{- end }}
